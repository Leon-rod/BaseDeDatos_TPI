

------------------------------------------------------------------ CONSULTAS ---------------------------------------------------------------------------
--1)
--Mostrar los totales facturados por año, mes y vendedor, además de la venta mas cara, siempre y cuando este total sea superior a su propio promedio
-- de ventas en el año corriente.
SELECT YEAR(F.FECHA) 'AÑO', 
	   MONTH(F.FECHA) 'MES',
	   F.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS 'ID_PERSONAL',
	   P.APELLIDO + ', ' + P.NOMBRE 'PERSONAL',
	   SUM(D.CANTIDAD * D.PRECIO_UNITARIO) 'TOTAL_FACTURADO',
	   MAX(D.CANTIDAD*D.PRECIO_UNITARIO) 'VENTA_MAS_CARA'
FROM FACTURAS F
JOIN PERSONAL_CARGOS_ESTABLECIMIENTOS PCE ON PCE.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS =  F.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
JOIN DISPENSACIONES D ON D.ID_FACTURA = F.ID_FACTURA
JOIN PERSONAL P ON P.ID_PERSONAL = PCE.ID_PERSONAL
GROUP BY YEAR(F.FECHA), MONTH(F.FECHA), P.APELLIDO + ', ' + P.NOMBRE, F.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
HAVING SUM(D.CANTIDAD * D.PRECIO_UNITARIO) > (SELECT SBC.PROMEDIO
												FROM (SELECT F1.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS 'ID_PERSONAL_1', AVG(D1.CANTIDAD*(D1.PRECIO_UNITARIO-(D1.DESCUENTO*D1.PRECIO_UNITARIO))) 'PROMEDIO'
													  FROM FACTURAS F1
													  JOIN DISPENSACIONES D1 ON D1.ID_FACTURA = F1.ID_FACTURA
													  WHERE YEAR(F1.FECHA) = YEAR(GETDATE())
													  GROUP BY F1.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
													  ) AS SBC
												WHERE SBC.ID_PERSONAL_1 = F.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS)

--2)
--- En una misma tabla se solicita un reporte por año y factura de aquellas que habiendo sido abonadas (al menos en una parte) con el tipo de pago 'Tarjeta de Credito'
--- tengan más de 2 dispensaciones. Por otro lado se solicitan las facturas que fueron abonadas (al menos en una parte) con el tipo de pago 'QR MODO' y que a su vez
--- todas sus dispensaciones hayan tenido un importe superior a los $5000, teniendo en cuenta el descuento que se les haya aplicado. Este reporte debe estar ordenado
--- por el tipo de pago y por su año ascendente.
SELECT F.ID_FACTURA 'NUMERO DE FACTURA',
	   YEAR(F.FECHA) 'AÑO',
	   COUNT(D.ID_DISPENSACION) 'CANTIDAD DISPENSACIONES',	   
	   'CREDITO' 'TIPO PAGO'
FROM FACTURAS F
JOIN FACTURAS_TIPOS_PAGOS FTP ON FTP.ID_FACTURA = F.ID_FACTURA
JOIN TIPOS_PAGOS TP ON TP.ID_TIPO_PAGO = FTP.ID_TIPO_PAGO
JOIN DISPENSACIONES D ON D.ID_FACTURA = F.ID_FACTURA
WHERE TP.TIPO_PAGO = 'Tarjeta de Credito'
GROUP BY YEAR(F.FECHA), F.ID_FACTURA
HAVING 2 < (SELECT COUNT(*) FROM DISPENSACIONES DI WHERE DI.ID_FACTURA = F.ID_FACTURA)

UNION 

SELECT F.ID_FACTURA,
	   YEAR(F.FECHA) 'AÑO',
	   COUNT(D.ID_DISPENSACION),
	   'QR_MODO'
FROM FACTURAS F
JOIN FACTURAS_TIPOS_PAGOS FTP ON FTP.ID_FACTURA = F.ID_FACTURA
JOIN TIPOS_PAGOS TP ON TP.ID_TIPO_PAGO = FTP.ID_TIPO_PAGO
JOIN DISPENSACIONES D ON D.ID_FACTURA = F.ID_FACTURA
WHERE TP.TIPO_PAGO = 'QR MODO'
GROUP BY YEAR(F.FECHA), F.ID_FACTURA
HAVING 5000 <  ALL (SELECT D1.CANTIDAD*(D1.PRECIO_UNITARIO-(D1.DESCUENTO*D1.PRECIO_UNITARIO)) FROM DISPENSACIONES D1 WHERE D1.ID_FACTURA = F.ID_FACTURA)
ORDER BY 4, 2 ASC

--3)								
--- Se quiere saber el total facturado por cada establecimiento desde el comienzo de los registros, el mejor año y su facturacion tomando
--- en cuenta únicamente las ventas de medicamentos.

select E.ID_ESTABLECIMIENTO,e.NOMBRE 'Establecimiento', FORMAT(SUM(d.CANTIDAD * (d.PRECIO_UNITARIO - (d.PRECIO_UNITARIO * d.DESCUENTO))), 'N2') 'Total facturado'
		,(select '$' + FORMAT(SCMA.Facturado, 'N2') + ', año ' + CAST(SCMA.Año AS VARCHAR(5)) from

				(select top 1 year(f.FECHA) 'Año' , e1.NOMBRE, SUM(d.CANTIDAD * (d.PRECIO_UNITARIO - (d.PRECIO_UNITARIO * d.DESCUENTO))) 'Facturado'  from FACTURAS f 	
					join DISPENSACIONES d on f.ID_FACTURA = d.ID_FACTURA
					join PERSONAL_CARGOS_ESTABLECIMIENTOS pce on f.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS = pce.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
					join ESTABLECIMIENTOS e1 on pce.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
					where e1.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
						and d.ID_MEDICAMENTO_LOTE is not null
					group by year(f.FECHA), e1.NOMBRE		
					order by 3 desc) as SCMA) 'Mejor año facturado' from FACTURAS f

		join DISPENSACIONES d on f.ID_FACTURA = d.ID_FACTURA
		join PERSONAL_CARGOS_ESTABLECIMIENTOS pce on f.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS = pce.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
		join ESTABLECIMIENTOS e on pce.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
		where d.ID_MEDICAMENTO_LOTE is not null	
		group by  E.ID_ESTABLECIMIENTO, e.NOMBRE					

--4)
--Listar el contacto, el barrio, el total de medicamentos dispensados, la cantidad de compras y el mayor monto de compra de los clientes.
--El mayor monto de compra del mes debe ser mayor al promedio general de montos de compra y su contacto sea un mail.
--Agrupado por mes, ordenado por el total de medicamentos dispensados.


SELECT 
    YEAR(F.FECHA) 'Año',  
    DATENAME(MONTH, F.FECHA) 'Mes', 
    C.NOMBRE + ' ' + C.APELLIDO 'Cliente', 
    SUM(CASE WHEN D.ID_MEDICAMENTO_LOTE IS NOT NULL THEN D.CANTIDAD ELSE 0 END) 'Total_Medicamentos',
    CO.CONTACTO 'Contacto', 
    B.BARRIO 'Barrio', 
    COUNT(*) 'Cantidad_Compras', 
    MAX(D.CANTIDAD * (D.PRECIO_UNITARIO - (D.PRECIO_UNITARIO * D.DESCUENTO))) 'Mayor Monto' 
FROM 
    DISPENSACIONES D
JOIN FACTURAS F ON F.ID_FACTURA = D.ID_FACTURA
JOIN CLIENTES C ON F.ID_CLIENTE = C.ID_CLIENTE
JOIN CONTACTOS CO ON CO.ID_CLIENTE = C.ID_CLIENTE
JOIN BARRIOS B ON B.ID_BARRIO = C.ID_BARRIO
JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO_LOTE = D.ID_MEDICAMENTO_LOTE
JOIN MEDICAMENTOS M ON M.ID_MEDICAMENTO = ML.ID_MEDICAMENTO
JOIN TIPOS_CONTACTOS TP ON CO.ID_TIPO_CONTACTO = TP.ID_TIPO_CONTACTO

WHERE TP.TIPO_CONTACTO = 'Mail'

GROUP BY 
    YEAR(F.FECHA), 
    DATENAME(MONTH, F.FECHA), 
	C.ID_CLIENTE,
    C.NOMBRE + ' ' + C.APELLIDO, 
    CO.CONTACTO, 
    B.BARRIO
HAVING 
    MAX(D.CANTIDAD * (D.PRECIO_UNITARIO - (D.PRECIO_UNITARIO * D.DESCUENTO))) > 
    (SELECT AVG(D1.CANTIDAD * (D1.PRECIO_UNITARIO - (D1.PRECIO_UNITARIO * D1.DESCUENTO))) 
     FROM DISPENSACIONES D1) 
ORDER BY 
   Total_Medicamentos DESC;



--Del mes de agosto, listar medicamentos que no fueron repuestos ni vendidos y que no esten presentados como 
--tabletas comprimidas. Mostrar solo aquellos cuyos precios unitarios sean mayores al promedio de precios unitarios
--de los medicamentos que cumplan todas las condiciones anteriores. 


SELECT SBC.MEDICAMENTO, SBC.DESCRIPCION, SBC.PRECIO
FROM (SELECT M.NOMBRE_COMERCIAL 'MEDICAMENTO', M.DESCRIPCION 'DESCRIPCION', M.PRECIO 'PRECIO'
	  FROM MEDICAMENTOS M
	  JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
	  JOIN DISPENSACIONES D ON D.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
	  JOIN FACTURAS F ON F.ID_FACTURA = D.ID_FACTURA
	  JOIN PRESENTACIONES P ON P.ID_PRESENTACION = M.ID_PRESENTACION
	  WHERE ML.ID_MEDICAMENTO_LOTE != ALL (SELECT SBC.ID_MEDICAMENTO_LOTE FROM(SELECT M.ID_MEDICAMENTO 'ID_MEDICAMENTO', ML.ID_MEDICAMENTO_LOTE 'ID_MEDICAMENTO_LOTE'
	  									 FROM MEDICAMENTOS M
	  									 JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
	  									 JOIN DETALLES_PEDIDOS DP ON DP.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
	  									 JOIN PEDIDOS P ON P.ID_PEDIDO = DP.ID_PEDIDO
	  									 WHERE DP.ID_MEDICAMENTO_LOTE IS NOT NULL
	  									 AND MONTH(P.FECHA) = 8 AND YEAR(GETDATE()) = YEAR(P.FECHA)) SBC)
	  AND P.PRESENTACION NOT LIKE '%COMP%'
	  AND ML.ID_MEDICAMENTO_LOTE NOT IN (SELECT ML.ID_MEDICAMENTO_LOTE 'ID_MEDICAMENTO_LOTE'
	  									 FROM MEDICAMENTOS M
	  									 JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
	  									 JOIN DISPENSACIONES D ON D.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
	  									 JOIN FACTURAS F ON F.ID_FACTURA = D.ID_FACTURA
	  									 WHERE D.ID_MEDICAMENTO_LOTE IS NOT NULL
	  									 AND MONTH(F.FECHA) = 8 AND YEAR(GETDATE()) = YEAR(F.FECHA))
	  GROUP BY M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.PRECIO
	  HAVING M.PRECIO > (SELECT AVG(M1.PRECIO)
	  				   FROM MEDICAMENTOS M1)) SBC
WHERE SBC.PRECIO > (SELECT AVG(SBC1.PRECIO)
					FROM (SELECT M.NOMBRE_COMERCIAL 'MEDICAMENTO', M.DESCRIPCION 'DESCRIPCION', M.PRECIO
						  FROM MEDICAMENTOS M
						  JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
						  JOIN DISPENSACIONES D ON D.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
						  JOIN FACTURAS F ON F.ID_FACTURA = D.ID_FACTURA
						  JOIN PRESENTACIONES P ON P.ID_PRESENTACION = M.ID_PRESENTACION
						  WHERE ML.ID_MEDICAMENTO_LOTE != ALL (SELECT SBC.ID_MEDICAMENTO_LOTE FROM(SELECT M.ID_MEDICAMENTO 'ID_MEDICAMENTO', ML.ID_MEDICAMENTO_LOTE 'ID_MEDICAMENTO_LOTE'
						  									 FROM MEDICAMENTOS M
						  									 JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
						  									 JOIN DETALLES_PEDIDOS DP ON DP.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
						  									 JOIN PEDIDOS P ON P.ID_PEDIDO = DP.ID_PEDIDO
						  									 WHERE DP.ID_MEDICAMENTO_LOTE IS NOT NULL
						  									 AND MONTH(P.FECHA) = 8 AND YEAR(GETDATE()) = YEAR(P.FECHA)) SBC)
						  AND P.PRESENTACION NOT LIKE '%COMP%'
						  AND ML.ID_MEDICAMENTO_LOTE NOT IN (SELECT ML.ID_MEDICAMENTO_LOTE 'ID_MEDICAMENTO_LOTE'
						  									 FROM MEDICAMENTOS M
						  									 JOIN MEDICAMENTOS_LOTES ML ON ML.ID_MEDICAMENTO = M.ID_MEDICAMENTO
						  									 JOIN DISPENSACIONES D ON D.ID_MEDICAMENTO_LOTE = ML.ID_MEDICAMENTO_LOTE
						  									 JOIN FACTURAS F ON F.ID_FACTURA = D.ID_FACTURA
						  									 WHERE D.ID_MEDICAMENTO_LOTE IS NOT NULL
						  									 AND MONTH(F.FECHA) = 8 AND YEAR(GETDATE()) = YEAR(F.FECHA))
						  GROUP BY M.NOMBRE_COMERCIAL, M.DESCRIPCION, M.PRECIO
						  HAVING M.PRECIO > (SELECT AVG(M1.PRECIO)
						  				   FROM MEDICAMENTOS M1)) SBC1)




