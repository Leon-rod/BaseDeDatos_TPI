CREATE TRIGGER DIS_ACTUALIZAR_INVENTARIO_VENTA
ON DISPENSACIONES
FOR INSERT
AS
BEGIN

	INSERT INTO INVENTARIOS(ID_FACTURA, ID_DISPENSACION, ID_TIPO_MOV, ID_STOCK)
	SELECT i.ID_FACTURA, i.ID_DISPENSACION, 2, s.ID_STOCK
	FROM inserted i join STOCKS s on i.ID_MEDICAMENTO_LOTE = s.ID_MEDICAMENTO_LOTE
	join FACTURAS f on f.ID_FACTURA = i.ID_FACTURA
	join PERSONAL_CARGOS_ESTABLECIMIENTOS p on p.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS = f.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
	join ESTABLECIMIENTOS e on p.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
	where p.ID_ESTABLECIMIENTO = s.ID_ESTABLECIMIENTO
END

CREATE TRIGGER DIS_VERIFICAR_STOCK_VENTA
ON DISPENSACIONES
INSTEAD OF INSERT
AS
	DECLARE @PRODUCTO INT
	

	SELECT @PRODUCTO = i.ID_PRODUCTO FROM inserted i
		IF(@PRODUCTO IS NULL)
			BEGIN
						DECLARE @STOCK_MEDICAMENTO INT
						SELECT @STOCK_MEDICAMENTO = s.CANTIDAD FROM inserted i join STOCKS s on i.ID_MEDICAMENTO_LOTE = s.ID_MEDICAMENTO_LOTE
							join FACTURAS f on f.ID_FACTURA = i.ID_FACTURA
							join PERSONAL_CARGOS_ESTABLECIMIENTOS p on p.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS = f.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
							join ESTABLECIMIENTOS e on p.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
							where p.ID_ESTABLECIMIENTO = s.ID_ESTABLECIMIENTO

							IF(@STOCK_MEDICAMENTO = 0 OR @STOCK_MEDICAMENTO is null)
							begin
								raiserror('No hay stock del medicamento para vender', 10, 1)
								rollback transaction
								RETURN
							end
							ELSE
								BEGIN
									INSERT INTO DISPENSACIONES(ID_FACTURA, ID_DISPENSACION, ID_MEDICAMENTO_LOTE, ID_COBERTURA
											, DESCUENTO, PRECIO_UNITARIO, CANTIDAD, MATRICULA, CODIGO_VALIDACION)
									SELECT ID_FACTURA, ID_DISPENSACION, ID_MEDICAMENTO_LOTE, ID_COBERTURA
											, DESCUENTO, PRECIO_UNITARIO, CANTIDAD, MATRICULA, CODIGO_VALIDACION
										FROM inserted
								END

			END
		ELSE
			BEGIN
						DECLARE @STOCK_PRODUCTO INT
						SELECT @STOCK_PRODUCTO = s.CANTIDAD FROM inserted i join STOCKS s on i.ID_PRODUCTO = s.ID_PRODUCTO
							join FACTURAS f on f.ID_FACTURA = i.ID_FACTURA
							join PERSONAL_CARGOS_ESTABLECIMIENTOS p on p.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS = f.ID_PERSONAL_CARGOS_ESTABLECIMIENTOS
							join ESTABLECIMIENTOS e on p.ID_ESTABLECIMIENTO = e.ID_ESTABLECIMIENTO
							where p.ID_ESTABLECIMIENTO = s.ID_ESTABLECIMIENTO

							IF(@STOCK_PRODUCTO = 0 OR @STOCK_PRODUCTO is null)
							begin
								raiserror('No hay stock del producto para vender', 10, 1)
								rollback transaction
								RETURN
							end
							ELSE
								BEGIN
								
									INSERT INTO DISPENSACIONES(ID_FACTURA, ID_DISPENSACION, ID_PRODUCTO
												, DESCUENTO, PRECIO_UNITARIO, CANTIDAD)
									SELECT ID_FACTURA, ID_DISPENSACION, ID_PRODUCTO
												, DESCUENTO, PRECIO_UNITARIO, CANTIDAD
											FROM inserted
								END
			END




-- INICIO TEST TRIGGER DIS_VERIFICAR_STOCK_VENTA
INSERT INTO DISPENSACIONES(ID_DISPENSACION, ID_FACTURA, ID_MEDICAMENTO_LOTE, ID_PRODUCTO, DESCUENTO, PRECIO_UNITARIO, CANTIDAD, MATRICULA, CODIGO_VALIDACION)
VALUES(13, 1, NULL, 5, 0, 2220, 2, NULL, NULL)


	--establecimiento 2
	--producto 5
	-- FUNCIONA PRODUCTOS si no tiene stock tira el error y si no, inserta bien


INSERT INTO DISPENSACIONES(ID_DISPENSACION,ID_FACTURA,ID_MEDICAMENTO_LOTE, ID_COBERTURA, DESCUENTO,PRECIO_UNITARIO,CANTIDAD,MATRICULA,CODIGO_VALIDACION)
	VALUES(26,2,3,1,0.20,855.54,6,'AB123CD','JCKI4902')

	-- establecimiento 4
	-- medicamento 3
	-- FUNCIONA MEDICAMENTOS si no tiene stock tira el error y si no, inserta bien

--- FIN TEST TRIGGER DIS_VERIFICAR_STOCK_VENTA
